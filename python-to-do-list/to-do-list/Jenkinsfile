pipeline {
    agent {
        docker {
            image 'thanhtha/jenkins-agent:java-v17-mvn-npm-2'
            args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
        }
    }
    environment {
    SONAR_PROJECT_KEY = "to-do-list"
    SONAR_PROJECT_NAME = "to-do-list-Project"
    SONAR_URL = "http://172.25.216.100:9000"
    DOCKER_IMAGE = "thanhtha/to-do-list:${BUILD_NUMBER}"
    DIRECTORY = "python-to-do-list/to-do-list"
    }
    stages {
        stage ('Checkout') {
            steps {
                git branch: 'master', url: 'https://github.com/tnubeo1111/cicd-repo.git'
            }
        }
        stage ('Check File Dockerfile') {
            steps {
                sh '''
                    cd ${DIRECTORY}
                    if [ ! -f "Dockerfile" ]; then
                        echo "File 'Dockerfile' does not exist."
                        exit 1
                    fi
                    ls -al
                    
                '''
            }
        }
        stage('Create SonarQube Project') {
            steps {
                withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
                    // Tạo dự án mới trên SonarQube thông qua API
                    sh """
                        curl -u ${SONAR_AUTH_TOKEN}: \
                        -X POST \
                        -d "name=${SONAR_PROJECT_NAME}" \
                        -d "project=${SONAR_PROJECT_KEY}" \
                        ${SONAR_URL}/api/projects/create
                    """
                }
            }
        }
        stage('Static Code Analysis') {
            steps {
                withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
                    sh '''
                        cd ${DIRECTORY}
                        sonar-scanner \
                            -Dsonar.login=$SONAR_AUTH_TOKEN \
                            -Dsonar.host.url=${SONAR_URL} \
                            -Dsonar.projectKey=${SONAR_PROJECT_KEY} \
                            -Dsonar.projectName=${SONAR_PROJECT_NAME} \
                            -Dsonar.sources=.
                    '''
                }
            }
        }
    }
    post {
      always {
        cleanWs()
      }
    }
}