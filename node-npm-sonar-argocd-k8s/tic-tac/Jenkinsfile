pipeline {
    agent {
        docker {
            image 'thanhtha/jenkins-agent:java-v17-mvn-npm-1'
            args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
        }
    }
    stages {
        stage ('Checkout') {
            steps {
                git branch: 'master', url: 'https://github.com/tnubeo1111/cicd-repo.git'
            }
        }
        stage ('Check Directory Dest') {
            steps {
                sh '''
                    cd node-npm-sonar-argocd-k8s/tic-tac
                    if [ ! -d "Dest" ]; then
                        echo "Directory Dest' does not exist."
                    fi

                    ls -al
                '''
            }
        }
        stage('Create SonarQube Project') {
            environment {
                SONAR_URL = "http://172.25.216.100:9000"
                SONAR_PROJECT_KEY = "tic-tac-toe-${BUILD_ID}"  // Tạo khóa dự án duy nhất dựa trên BUILD_ID
                SONAR_PROJECT_NAME = "Tic-Tac-Toe Project"
            }
            steps {
                withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
                    // Tạo dự án mới trên SonarQube thông qua API
                    sh """
                        curl -u ${SONAR_AUTH_TOKEN}: \
                        -X POST \
                        -d "name=${SONAR_PROJECT_NAME}" \
                        -d "project=${SONAR_PROJECT_KEY}" \
                        ${SONAR_URL}/api/projects/create
                    """
                }
            }
        }
        // stage('Static Code Analysis') {
        //     environment {
        //         SONAR_URL = "http://172.25.216.100:9000"
        //     }
        //     steps {
        //         withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
        //         sh 'cd node-npm-sonar-argocd-k8s/tic-tac && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        //         }
        //     }
        // }
        // stage ('Build images') {
        //     environment {
        //         DOCKER_IMAGE = ""thanhtha/tic-tac-toe:${BUILD_NUMBER}""
        //     }
        //     steps {
        //         sh '''
        //             cd node-npm-sonar-argocd-k8s/tic-tac
        //             docker build -t  .
        //         '''
        //     }
        // }
    }
    post {
      always {
        cleanWs()
      }
    }
}