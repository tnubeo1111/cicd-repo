pipeline {
    agent {
        docker {
            image 'thanhtha/jenkins-agent:java-v17-mvn-npm-2'
            args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
        }
    }
    environment {
    SONAR_PROJECT_KEY = "tic-tac-toe"
    SONAR_PROJECT_NAME = "Tic-Tac-Toe-Project"
    SONAR_URL = "http://172.25.216.100:9000"
    DOCKER_IMAGE = "thanhtha/tic-tac-toe:${BUILD_NUMBER}"
    }
    stages {
        stage ('Checkout') {
            steps {
                git branch: 'master', url: 'https://github.com/tnubeo1111/cicd-repo.git'
            }
        }
        stage ('Check Directory Dest') {
            steps {
                sh '''
                    cd node-npm-sonar-argocd-k8s/tic-tac
                    if [ ! -d "Dest" ]; then
                        echo "Directory Dest' does not exist."
                    fi

                    ls -al
                '''
            }
        }
        stage('Create SonarQube Project') {
            steps {
                withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
                    // Tạo dự án mới trên SonarQube thông qua API
                    sh """
                        curl -u ${SONAR_AUTH_TOKEN}: \
                        -X POST \
                        -d "name=${SONAR_PROJECT_NAME}" \
                        -d "project=${SONAR_PROJECT_KEY}" \
                        ${SONAR_URL}/api/projects/create
                    """
                }
            }
        }
        stage('Static Code Analysis') {
            steps {
                withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
                    sh '''
                        cd node-npm-sonar-argocd-k8s/tic-tac
                        sonar-scanner \
                            -Dsonar.login=$SONAR_AUTH_TOKEN \
                            -Dsonar.host.url=${SONAR_URL} \
                            -Dsonar.projectKey=${SONAR_PROJECT_KEY} \
                            -Dsonar.projectName=${SONAR_PROJECT_NAME} \
                            -Dsonar.sources=.
                    '''
                }
            }
        }
        stage ('Build images') {
            environment {
                REGISTRY_CREDENTIALS = credentials('docker-thanhtha')
            }
            steps {
                script {
                    sh 'cd node-npm-sonar-argocd-k8s/tic-tac && docker build -t ${DOCKER_IMAGE} .'
                    def dockerImage = docker.image("${DOCKER_IMAGE}")
                    docker.withRegistry('https://index.docker.io/v1/', "docker-thanhtha") {
                        dockerImage.push()
                    }
                }
            }
        }
        stage('Delete old file deployment') {
            steps {
                script {
                // Xóa file tạm thời nếu tồn tại
                sh '''
                    if [ -f cd node-npm-sonar-argocd-k8s/tic-tac-manifest/deployment.yml ]; then
                    rm -f cd node-npm-sonar-argocd-k8s/tic-tac-manifest/deployment.yml
                    fi
                '''
                }
            }
            }
        stage('Update Deployment File') {
            environment {
                GIT_REPO_NAME = "cicd-repo"
                GIT_USER_NAME = "tnubeo1111"
            }
            steps {
                withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                    sh '''
                        git config --global --add safe.directory '*'
                        git config user.email "jenkins-admin@gmail.com"
                        git config user.name "jenkins-admin"
                        BUILD_NUMBER=${BUILD_NUMBER}
                        cp node-npm-sonar-argocd-k8s/tic-tac-manifest/tmp-deployment.yml node-npm-sonar-argocd-k8s/tic-tac-manifest/deployment.yml
                        sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" node-npm-sonar-argocd-k8s/tic-tac-manifest/deployment.yml
                        git add node-npm-sonar-argocd-k8s/tic-tac-manifest/*
                        git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                        git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:master
                    '''
                }
            }
        }
    }
    post {
      always {
        cleanWs()
      }
    }
}